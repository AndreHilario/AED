#include <stdio.h>
#include <stdlib.h>
#include <time.h>

void swap(int* a, int* b){
    int t = *a;
    *a = *b;
    *b = t;
}

int partition(int arr[], int low, int high){
    int pivot = arr[high];
    int i = (low - 1);
    for(int j = low; j <= high - 1; j++){
        if(arr[j] < pivot){
            i++;
            swap(&arr[i], &arr[j]);
        }
    }
    swap(&arr[i+1], &arr[high]);
    return (i+1);
}

void quickSort(int arr[], int low, int high){
    if(low < high){
        int pi = partition(arr, low, high);
        quickSort(arr, low, pi - 1);
        quickSort(arr, pi + 1, high);
    }
}

int main(){
    int n;
    printf("Digite o tamanho do array: ");
    scanf("%d", &n);
    int arr[n];
    srand(time(NULL)); // inicializa a semente do gerador de números aleatórios
    printf("Array gerado aleatoriamente: ");
    for(int i=0; i<n; i++){
        arr[i] = rand() % 101; // gera um número aleatório entre 0 e 100
        printf("%d ", arr[i]);
    }
    
    clock_t t1, t2;
    t1 = clock();
    
    quickSort(arr, 0, n-1);
    
    t2 = clock();
    
    printf("\nArray ordenado: ");
    for(int i=0; i<n; i++){
        printf("%d ", arr[i]);
    }
    
    double tempo_execucao = (double) (t2 - t1) / CLOCKS_PER_SEC;
    printf("\nTempo de execucao: %.4f segundos", tempo_execucao);
    
    return 0;
}